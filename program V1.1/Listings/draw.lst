C51 COMPILER V9.54   DRAW                                                                  12/24/2023 19:02:49 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DRAW
OBJECT MODULE PLACED IN .\Objects\draw.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE draw.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\draw.lst) TABS(2) OBJECT(.\Objects\draw.obj)

line level    source

   1          #include <REGX51.H>
   2          #include <LCD1602.h>
   3          #include <math.h>
   4          #include "Delay.h"
   5          #define one_s 0.0002
   6          
   7          sbit x_maichong=P2^0;
   8          sbit x_fangxiang=P2^1;
   9          sbit y_maichong=P2^2;
  10          sbit y_fangxiang=P2^3;
  11          unsigned char stop;
  12          double myabs(double a)
  13          {
  14   1        if(a<0)
  15   1          return -a;
  16   1        else
  17   1          return a;
  18   1      }
  19          
  20          /*******************************************************************************
  21          * 函 数 名         : go_onestep
  22          * 函数功能       : 按照参数前进包括轴，方向，步长，速度
  23          *******************************************************************************/
  24          void go_onestep(unsigned char zhou,unsigned int fangxiang,unsigned int step,unsigned int speed)
  25          {
  26   1        unsigned int i;
  27   1        
  28   1        speed=(-5*speed+50);
  29   1        
  30   1        if (zhou=='x')
  31   1        {
  32   2          if (fangxiang==1)
  33   2          {
  34   3            x_fangxiang=0;
  35   3          }
  36   2          else
  37   2            x_fangxiang=1;
  38   2          for(i=0;i<step;i++)
  39   2          {
  40   3            x_maichong=0;           
  41   3            delay(speed);     
  42   3            x_maichong=1;            
  43   3          }
  44   2        }
  45   1        if (zhou=='y')
  46   1        {
  47   2          if (fangxiang==1)
  48   2          {
  49   3            y_fangxiang=1;
  50   3          }
  51   2          else
  52   2            y_fangxiang=0;
  53   2          for(i=0;i<step;i++)
  54   2          {
C51 COMPILER V9.54   DRAW                                                                  12/24/2023 19:02:49 PAGE 2   

  55   3            y_maichong=0;           
  56   3            delay(speed);     
  57   3            y_maichong=1;            
  58   3          }
  59   2        }
  60   1      }
  61          
  62          void draw_zhixian(double x_qi,double y_qi,double x_end,double y_end,unsigned int step,unsigned int speed)
  63          {
  64   1        unsigned int zong_step;
  65   1        double x_now;
  66   1        double y_now;
  67   1        double juli=0;
  68   1        unsigned char n=0;
  69   1        int x_dir,y_dir,x_data,y_data;
  70   1        /******************************/
  71   1        x_now=x_qi;
  72   1        y_now=y_qi;
  73   1        
  74   1        zong_step=(myabs(x_qi-x_end)+myabs(y_qi-y_end))/(one_s*step);
  75   1        
  76   1        if((x_end-x_qi)>0)
  77   1          x_dir=1;
  78   1        else
  79   1          x_dir=0;
  80   1        if((y_end-y_qi)>0)
  81   1          y_dir=1;
  82   1        else
  83   1          y_dir=0;
  84   1        while(zong_step)
  85   1        {
  86   2          if(juli>=0)
  87   2          {
  88   3            go_onestep('x',x_dir,step,speed);
  89   3            if(x_dir==0)
  90   3            {
  91   4              x_now=x_now-one_s*step;
  92   4            }
  93   3            else
  94   3            {
  95   4              x_now=x_now+one_s*step;
  96   4            }
  97   3            juli = juli - myabs(y_end - y_qi);
  98   3          }
  99   2          
 100   2          else if(juli<0)
 101   2          {
 102   3            go_onestep('y',y_dir,step,speed);
 103   3            if(y_dir==0)
 104   3            {
 105   4              y_now=y_now-one_s*step;
 106   4            }
 107   3            else
 108   3            { 
 109   4              y_now=y_now+one_s*step;
 110   4            }
 111   3            juli = juli + myabs(x_end - x_qi);
 112   3          }
 113   2          n++;
 114   2          if(n%100==0)
 115   2          {
 116   3            x_data=x_now*100;
C51 COMPILER V9.54   DRAW                                                                  12/24/2023 19:02:49 PAGE 3   

 117   3            y_data=y_now*100;
 118   3            show_x_y(x_data,y_data);
 119   3          }
 120   2          zong_step--;
 121   2          if(stop==1)
 122   2          {
 123   3            break;
 124   3          }
 125   2        }
 126   1      }
 127          
 128          
 129          
 130          void draw_shun_yuanhu(double x_qi,double y_qi,double xin_x,double xin_y,double jiaodu,unsigned int step,un
             -signed int speed)
 131          {
 132   1        double juli;
 133   1        double x_now,y_now;
 134   1        double zong;
 135   1        double r;
 136   1        unsigned char n=0;
 137   1        int x_data,y_data;
 138   1        x_now=x_qi-xin_x;
 139   1        y_now=y_qi-xin_y;
 140   1        
 141   1        r=sqrt((xin_x-x_qi)*(xin_x-x_qi)+(xin_y-y_qi)*(xin_y-y_qi));
 142   1        
 143   1        zong=r*jiaodu*0.02222;
 144   1        
 145   1        while(zong>0)
 146   1        {
 147   2          juli=x_now*x_now+y_now*y_now-r*r;
 148   2          if(x_now>=0&&y_now>0)
 149   2          {
 150   3            if(juli>=0)
 151   3            {
 152   4              go_onestep('y',0,step,speed);
 153   4              y_now-=one_s*step;
 154   4              //juli=juli-2*x_now+one_s*step;
 155   4            }
 156   3            else
 157   3            {
 158   4              go_onestep('x',1,step,speed);
 159   4              x_now+=one_s*step;
 160   4              //juli=juli+2*y_now+one_s*step;
 161   4            }
 162   3          }
 163   2          else if(x_now<0&&y_now>=0)
 164   2          {
 165   3            if(juli>=0)
 166   3            {
 167   4              go_onestep('x',1,step,speed);
 168   4              x_now+=one_s*step;
 169   4              //juli=juli-2*y_now+one_s*step;
 170   4            }
 171   3            else
 172   3            {
 173   4              go_onestep('y',1,step,speed);
 174   4              y_now+=one_s*step;
 175   4              //juli=juli-2*x_now+one_s*step;
 176   4            }
 177   3          }
C51 COMPILER V9.54   DRAW                                                                  12/24/2023 19:02:49 PAGE 4   

 178   2          else if(x_now<=0&&y_now<0)
 179   2          {
 180   3            if(juli>=0)
 181   3            {
 182   4              go_onestep('y',1,step,speed);
 183   4              y_now+=one_s*step;
 184   4              //juli=juli+2*x_now+one_s*step;
 185   4            }
 186   3            else
 187   3            {
 188   4              go_onestep('x',0,step,speed);
 189   4              x_now-=one_s*step;
 190   4              //juli=juli-2*y_now+one_s*step;
 191   4            }
 192   3          }
 193   2          else if(x_now>0&&y_now<=0)
 194   2          {
 195   3            if(juli>=0)
 196   3            {
 197   4              go_onestep('x',0,step,speed);
 198   4              x_now-=one_s*step;
 199   4              //juli=juli+2*y_now+one_s*step;
 200   4            }
 201   3            else 
 202   3            {
 203   4              go_onestep('y',0,step,speed);
 204   4              y_now-=one_s*step;
 205   4              //juli=juli+2*x_now+one_s*step;
 206   4            }
 207   3          }
 208   2          n++;
 209   2          if(n%100==0)
 210   2          {
 211   3            x_data=x_now*100;
 212   3            y_data=y_now*100;
 213   3            show_x_y(x_data,y_data);
 214   3          }
 215   2          zong-=one_s*step;
 216   2          if(stop==1)
 217   2          {
 218   3            break;
 219   3          }
 220   2        }
 221   1      }
 222          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2629    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1     101
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
